{"version":3,"sources":["compornents/navbar.jsx","compornents/gitterOne.jsx","compornents/gitterTwo.jsx","compornents/gitter.jsx","compornents/winner.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","Fragment","className","href","id","Component","GitterOne","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","props","addGitterOne","state","bind","assertThisInitialized","style","borderRadius","width","keys","gitterOne","length","src","avatar_url","alt","name","onSubmit","htmlFor","type","placeholder","onChange","GitterTwo","addGitterTwo","gitterTwo","Gitter","battleButton","battleIsOn","onClick","battle","Winner","winner","score","followers","public_gists","public_repos","loser","App","axios","get","concat","then","response","data","bio","Company","console","log","tie","afterSubmit","gitter","navbar","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adca5a11.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <a className=\"navbar-brand\" href=\"#\">Git Battle</a>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav\">\n                            <a className=\"nav-item nav-link active\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n                            <a className=\"nav-item nav-link\" href=\"#\">Top Gitters</a>\n                        </div>\n                    </div>\n                </nav>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Navbar;","import React, { Component } from 'react';\n\nclass GitterOne extends Component {\n\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            query: ''\n        }\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ query: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addGitterOne(this.state.query)\n    }\n\n    render() {\n        if (Object.keys(this.props.gitterOne).length > 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img style={this.style} src={this.props.gitterOne.avatar_url} alt=\"contender One\"></img>\n                    </div>\n                    <div className=\"col-12 mt-2\">\n                      <h2>{this.props.gitterOne.name}</h2>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"gitterOne\">Contender One:</label>\n                    <input type=\"text\" id=\"gitterOne\" className=\"form-control\" placeholder=\"Enter Your Github Username\" onChange={this.handleChange} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-secondary\" value=\"Submit\"></input>\n            </form>\n        );\n    }\n}\n\nexport default GitterOne;","import React, { Component } from 'react';\n\nclass GitterTwo extends Component {\n    constructor(){\n        super()\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {\n            query: ''\n        }\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({query: e.target.value})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addGitterTwo(this.state.query)\n    }\n\n    render() {\n\n        if (Object.keys(this.props.gitterTwo).length > 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img style={this.style} src={this.props.gitterTwo.avatar_url} alt=\"contender One\"></img>\n                    </div>\n                    <div className=\"col-12 mt-2\">\n                      <h2>{this.props.gitterTwo.name}</h2>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"gitterOne\">Contender Two:</label>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter Your Github Username\" onChange={this.handleChange} />\n                </div>\n                <input type=\"submit\" className=\"btn btn-secondary\" value=\"Submit\"></input>\n            </form>\n        );\n    }\n}\n\nexport default GitterTwo;","import React, { Component } from 'react';\nimport GitterOne from './gitterOne'\nimport GitterTwo from './gitterTwo'\n\nclass Gitter extends Component {\n    state = {}\n    render() {\n        let battleButton\n        if (this.props.battleIsOn) {\n            battleButton = <button onClick={this.props.battle} className=\"btn btn-secondary\">Battle</button>\n        }\n        return (\n            <div>\n                <div className=\"row m-5\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <GitterOne addGitterOne={this.props.addGitterOne} battleIsOn={this.props.battleIsOn} gitterOne={this.props.gitterOne} />\n                    </div>\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <GitterTwo addGitterTwo={this.props.addGitterTwo} battleIsOn={this.props.battleIsOn} gitterTwo={this.props.gitterTwo} />\n                    </div>\n                    <div className=\"col-2\"></div>\n                </div>\n                <div className=\"row m-3\">\n                    <div className=\"col-5\"></div>\n                    <div className=\"col-2\">\n                        {battleButton}\n                    </div>\n                    <div className=\"col-5\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Gitter;","import React, { Component } from 'react';\n\nclass Winner extends Component {\n\n    constructor() {\n        super()\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row m-5\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mb-2\">\n                                <h2 className=\"pl-5\">Winner!</h2>\n                            </div>\n                            <div className=\"col-12 mb-2\">\n                                <h4 className=\"pl-5\">Score: {this.props.winner.score}</h4>\n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"pl-3\">\n                                    <img style={this.style} src={this.props.winner.avatar_url} alt=\"Winner\"></img>\n                                </div>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h2>{this.props.winner.name}</h2>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Followers: {this.props.winner.followers}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Public Gists: {this.props.winner.public_gists}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Public Repos: {this.props.winner.public_repos}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mb-2\">\n                                <h2 className=\"pl-5\">Loser!</h2>\n                            </div>\n                            <div className=\"col-12 mb-2\">\n                                <h4 className=\"pl-5\">Score: {this.props.loser.score}</h4>\n                            </div>\n                            <div className=\"col-12\">\n                                <img style={this.style} src={this.props.loser.avatar_url} alt=\"Loser\"></img>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h2>{this.props.loser.name}</h2>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Followers: {this.props.loser.followers}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Public Gists: {this.props.loser.public_gists}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5>Public Repos: {this.props.loser.public_repos}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-2\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Winner;","import React, { Component } from 'react';\nimport Navbar from './compornents/navbar'\nimport Gitter from './compornents/gitter'\nimport Winner from './compornents/winner'\nimport axios from 'axios'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      gitterOne: {},\n      gitterTwo: {},\n      battleIsOn: false,\n      winner: {},\n      loser: {},\n      tie: 'false'\n    }\n  }\n\n  render() {\n    let afterSubmit = <Gitter addGitterOne={this.addGitterOne}\n      addGitterTwo={this.addGitterTwo} battleIsOn={this.state.battleIsOn}\n      gitterOne={this.state.gitterOne} gitterTwo={this.state.gitterTwo} battle={this.battle} />\n    if (Object.keys(this.state.winner).length > 0) {\n      afterSubmit = <Winner winner={this.state.winner} loser={this.state.loser} />\n    }\n    return (\n      <div>\n        <Navbar />\n        {afterSubmit}\n      </div>\n    );\n  }\n\n  addGitterOne = (query) => {\n    axios.get(`https://api.github.com/users/${query}`).then((response) => {\n      this.setState({ gitterOne: response.data })\n      if (Object.keys(this.state.gitterOne).length > 0 && Object.keys(this.state.gitterTwo).length > 0) {\n        this.setState({ battleIsOn: true })\n      }\n\n    })\n  }\n\n  addGitterTwo = (query) => {\n    axios.get(`https://api.github.com/users/${query}`).then((response) => {\n      this.setState({ gitterTwo: response.data })\n\n      if (Object.keys(this.state.gitterOne).length > 0 && Object.keys(this.state.gitterTwo).length > 0) {\n        this.setState({ battleIsOn: true })\n      }\n\n    })\n  }\n\n  battle = () => {\n    let gitterOne = this.state.gitterOne\n    let gitterTwo = this.state.gitterTwo\n\n    gitterOne.score = gitterOne.followers * 2 + gitterOne.public_repos * 10 + gitterOne.public_gists * 5 + (gitterOne.bio ? 1 : 0) + (gitterOne.Company ? 2 : 0);\n\n    gitterTwo.score = gitterTwo.followers * 2 + gitterTwo.public_repos * 10 + gitterTwo.public_gists * 5 + (gitterTwo.bio ? 1 : 0) + (gitterTwo.Company ? 2 : 0);\n\n    console.log(gitterOne.score + \" \" + gitterTwo.score)\n    if (gitterOne.score > gitterTwo.score) {\n      this.setState({ winner: gitterOne })\n      this.setState({ loser: gitterTwo })\n      return\n    } else if (gitterOne.score < gitterTwo.score) {\n      this.setState({ winner: gitterTwo })\n      this.setState({ loser: gitterOne })\n      return\n    }\n\n    this.setState({ tie: true })\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}