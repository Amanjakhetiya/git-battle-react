{"version":3,"sources":["compornents/gitterOne.jsx","compornents/gitterTwo.jsx","compornents/gitter.jsx","compornents/winner.jsx","App.js","serviceWorker.js","index.js"],"names":["GitterOne","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","query","target","value","handleSubmit","preventDefault","props","addGitterOne","state","bind","assertThisInitialized","style","borderRadius","width","inputBoxStyle","backgroundColor","buttonStyle","labelStyle","color","fontFamily","fontSize","gitterNameStyle","keys","gitterOne","length","react_default","a","createElement","className","src","avatar_url","alt","name","onSubmit","htmlFor","type","id","placeholder","onChange","Component","GitterTwo","addGitterTwo","gitterTwo","Gitter","battleButton","battleIsOn","onClick","battle","Winner","h5Style","h2Style","h4Style","winner","score","followers","public_gists","public_repos","loser","App","axios","get","concat","then","response","data","bio","Company","console","log","tie","headingStyle","marginBottom","fotterStyle","marginTop","position","left","fotter","afterSubmit","gitter","align","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1c6eb6d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass GitterOne extends Component {\n\n    constructor() {\n        super();\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            query: ''\n        }\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n\n        this.inputBoxStyle = {\n            borderRadius: '25px',\n            backgroundColor: '#C0C0C0'\n        }\n\n        this.buttonStyle = {\n            borderRadius: '25px'\n        }\n\n        this.labelStyle = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '20px'\n        }\n\n        this.gitterNameStyle = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '30px'\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ query: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addGitterOne(this.state.query)\n    }\n\n    render() {\n        if (Object.keys(this.props.gitterOne).length > 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img style={this.style} src={this.props.gitterOne.avatar_url} alt=\"contender One\"></img>\n                    </div>\n                    <div className=\"col-12 mt-2\">\n                        <h2 style={this.gitterNameStyle}>{this.props.gitterOne.name}</h2>\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"gitterOne\" style={this.labelStyle}>Contender One:</label>\n                    <input style={this.inputBoxStyle} type=\"text\" className=\"form-control\" id=\"gitterOne\" placeholder=\"Enter Your Github Username\" onChange={this.handleChange} />\n                </div>\n                <input type=\"submit\" style={this.buttonStyle} className=\"btn btn-secondary\" value=\"Submit\"></input>\n            </form>\n        );\n    }\n}\n\nexport default GitterOne;","import React, { Component } from 'react';\n\nclass GitterTwo extends Component {\n    constructor() {\n        super()\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.state = {\n            query: ''\n        }\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n\n        this.inputBoxStyle = {\n            borderRadius: '25px',\n            backgroundColor: '#C0C0C0'\n        }\n\n        this.buttonStyle = {\n            borderRadius: '25px'\n        }\n\n        this.labelStyle = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '20px'\n        }\n\n        this.gitterNameStyle = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '30px'\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({ query: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.addGitterTwo(this.state.query)\n    }\n\n    render() {\n\n        if (Object.keys(this.props.gitterTwo).length > 0) {\n            return (\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <img style={this.style} src={this.props.gitterTwo.avatar_url} alt=\"contender One\"></img>\n                    </div>\n                    <div className=\"col-12 mt-2\">\n                        <h2 style={this.gitterNameStyle}>{this.props.gitterTwo.name}</h2>\n                    </div>\n                </div>\n            )\n        }\n\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"gitterOne\" style={this.labelStyle}>Contender Two:</label>\n                    <input type=\"text\" style={this.inputBoxStyle} className=\"form-control\" placeholder=\"Enter Your Github Username\" onChange={this.handleChange} />\n                </div>\n                <input type=\"submit\" style={this.buttonStyle} className=\"btn btn-secondary\" value=\"Submit\"></input>\n            </form>\n        );\n    }\n}\n\nexport default GitterTwo;","import React, { Component } from 'react';\nimport GitterOne from './gitterOne'\nimport GitterTwo from './gitterTwo'\n\nclass Gitter extends Component {\n    state = {}\n    render() {\n        let battleButton\n        if (this.props.battleIsOn) {\n            battleButton = <button onClick={this.props.battle} className=\"btn btn-secondary\">Battle</button>\n        }\n        return (\n            <div>\n                <div className=\"row m-5\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <GitterOne addGitterOne={this.props.addGitterOne} battleIsOn={this.props.battleIsOn} gitterOne={this.props.gitterOne} />\n                    </div>\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <GitterTwo addGitterTwo={this.props.addGitterTwo} battleIsOn={this.props.battleIsOn} gitterTwo={this.props.gitterTwo} />\n                    </div>\n                    <div className=\"col-2\"></div>\n                </div>\n                <div className=\"row m-3\">\n                    <div className=\"col-5\"></div>\n                    <div className=\"col-2\">\n                        {battleButton}\n                    </div>\n                    <div className=\"col-5\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Gitter;","import React, { Component } from 'react';\n\nclass Winner extends Component {\n\n    constructor() {\n        super()\n        this.style = {\n            borderRadius: '50%',\n            width: '70%'\n        }\n\n        this.h5Style = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '20px'\n        }\n\n        this.h2Style = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '30px'\n        }\n\n        this.h4Style = {\n            color: 'lightgrey',\n            fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n            fontSize: '25px'\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row m-5\">\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mb-2\">\n                                <h2 style={this.h2Style} className=\"pl-5\">Winner!</h2>\n                            </div>\n                            <div className=\"col-12 mb-2\">\n                                <h4 style={this.h4Style} className=\"pl-5\">Score: {this.props.winner.score}</h4>\n                            </div>\n                            <div className=\"col-12\">\n                                <div className=\"pl-3\">\n                                    <img style={this.style} src={this.props.winner.avatar_url} alt=\"Winner\"></img>\n                                </div>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h2 style={this.h2Style}>{this.props.winner.name}</h2>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Followers: {this.props.winner.followers}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Public Gists: {this.props.winner.public_gists}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Public Repos: {this.props.winner.public_repos}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-2\"></div>\n                    <div className=\"col\">\n                        <div className=\"row\">\n                            <div className=\"col-12 mb-2\">\n                                <h2 style={this.h2Style} className=\"pl-5\">Loser!</h2>\n                            </div>\n                            <div className=\"col-12 mb-2\">\n                                <h4 style={this.h4Style} className=\"pl-5\">Score: {this.props.loser.score}</h4>\n                            </div>\n                            <div className=\"col-12\">\n                                <img style={this.style} src={this.props.loser.avatar_url} alt=\"Loser\"></img>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h2 style={this.h2Style}>{this.props.loser.name}</h2>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Followers: {this.props.loser.followers}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Public Gists: {this.props.loser.public_gists}</h5>\n                            </div>\n                            <div className=\"col-12 mt-2\">\n                                <h5 style={this.h5Style}>Public Repos: {this.props.loser.public_repos}</h5>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-2\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Winner;","import React, { Component } from 'react';\nimport Gitter from './compornents/gitter'\nimport Winner from './compornents/winner'\nimport axios from 'axios'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      gitterOne: {},\n      gitterTwo: {},\n      battleIsOn: false,\n      winner: {},\n      loser: {},\n      tie: 'false'\n    }\n\n    this.headingStyle = {\n      fontSize: '100px',\n      fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n      marginBottom: '150px',\n      color: 'lightgrey'\n    }\n\n    this.fotterStyle = {\n      color: 'lightgrey',\n      fontFamily: '\"Comic Sans MS\", cursive, sans-serif',\n      fontSize: '20px',\n      marginTop: '12%',\n      position: 'relative',\n      left: '75%'\n  }\n\n  }\n\n  render() {\n    let afterSubmit = <Gitter addGitterOne={this.addGitterOne}\n      addGitterTwo={this.addGitterTwo} battleIsOn={this.state.battleIsOn}\n      gitterOne={this.state.gitterOne} gitterTwo={this.state.gitterTwo} battle={this.battle} />\n    \n    let fotter \n    if (Object.keys(this.state.winner).length > 0) {\n      afterSubmit = <Winner winner={this.state.winner} loser={this.state.loser} />\n    }\n\n    if(!this.state.battleIsOn){\n      fotter = <footer style={this.fotterStyle}>Made with <span>❤️</span> By Dhroov Gupta</footer>\n    }\n    return (\n      <div>\n        <h1 className=\"mt-5\" style={this.headingStyle} align=\"center\">Git Battle</h1>\n        {afterSubmit}\n        {fotter}\n      </div>\n    );\n  }\n\n  addGitterOne = (query) => {\n    axios.get(`https://api.github.com/users/${query}`).then((response) => {\n      this.setState({ gitterOne: response.data })\n      if (Object.keys(this.state.gitterOne).length > 0 && Object.keys(this.state.gitterTwo).length > 0) {\n        this.setState({ battleIsOn: true })\n      }\n\n    })\n  }\n\n  addGitterTwo = (query) => {\n    axios.get(`https://api.github.com/users/${query}`).then((response) => {\n      this.setState({ gitterTwo: response.data })\n\n      if (Object.keys(this.state.gitterOne).length > 0 && Object.keys(this.state.gitterTwo).length > 0) {\n        this.setState({ battleIsOn: true })\n      }\n\n    })\n  }\n\n  battle = () => {\n    let gitterOne = this.state.gitterOne\n    let gitterTwo = this.state.gitterTwo\n\n    gitterOne.score = gitterOne.followers * 2 + gitterOne.public_repos * 10 + gitterOne.public_gists * 5 + (gitterOne.bio ? 1 : 0) + (gitterOne.Company ? 2 : 0);\n\n    gitterTwo.score = gitterTwo.followers * 2 + gitterTwo.public_repos * 10 + gitterTwo.public_gists * 5 + (gitterTwo.bio ? 1 : 0) + (gitterTwo.Company ? 2 : 0);\n\n    console.log(gitterOne.score + \" \" + gitterTwo.score)\n    if (gitterOne.score > gitterTwo.score) {\n      this.setState({ winner: gitterOne })\n      this.setState({ loser: gitterTwo })\n      return\n    } else if (gitterOne.score < gitterTwo.score) {\n      this.setState({ winner: gitterTwo })\n      this.setState({ loser: gitterOne })\n      return\n    }\n\n    this.setState({ tie: true })\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}